// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResTIConnect.Infrastructure.Context;

#nullable disable

namespace ResTIConnect.Infrastructure.Migrations
{
    [DbContext(typeof(ResTIConnectDbContext))]
    [Migration("20240210134026_initial_create")]
    partial class initial_create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EventoSistema", b =>
                {
                    b.Property<int>("EventosEventoId")
                        .HasColumnType("int");

                    b.Property<int>("SistemasSistemaId")
                        .HasColumnType("int");

                    b.HasKey("EventosEventoId", "SistemasSistemaId");

                    b.HasIndex("SistemasSistemaId");

                    b.ToTable("EventoSistema");
                });

            modelBuilder.Entity("ResTIConnect.Domain.Entities.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("Logradouro")
                        .HasColumnType("longtext");

                    b.Property<string>("Numero")
                        .HasColumnType("longtext");

                    b.Property<string>("Pais")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("EnderecoId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("enderecos", (string)null);
                });

            modelBuilder.Entity("ResTIConnect.Domain.Entities.Evento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("DataHoraOcorrencia")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("EventoId");

                    b.ToTable("eventos", (string)null);
                });

            modelBuilder.Entity("ResTIConnect.Domain.Entities.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraEvento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Entidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext");

                    b.Property<int>("TuplaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("LogId");

                    b.ToTable("logs", (string)null);
                });

            modelBuilder.Entity("ResTIConnect.Domain.Entities.Perfil", b =>
                {
                    b.Property<int>("PerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Permissoes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("PerfilId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("perfis", (string)null);
                });

            modelBuilder.Entity("ResTIConnect.Domain.Entities.Sistema", b =>
                {
                    b.Property<int>("SistemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("DataHoraInicioIntegracao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("EnderecoEntrada")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EnderecoSaida")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Protocolo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("SistemaId");

                    b.ToTable("Sistemas", (string)null);
                });

            modelBuilder.Entity("ResTIConnect.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apelido")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UsuarioId");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("SistemaUsuario", b =>
                {
                    b.Property<int>("SistemasSistemaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("SistemasSistemaId", "UsuariosUsuarioId");

                    b.HasIndex("UsuariosUsuarioId");

                    b.ToTable("SistemaUsuario");
                });

            modelBuilder.Entity("EventoSistema", b =>
                {
                    b.HasOne("ResTIConnect.Domain.Entities.Evento", null)
                        .WithMany()
                        .HasForeignKey("EventosEventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResTIConnect.Domain.Entities.Sistema", null)
                        .WithMany()
                        .HasForeignKey("SistemasSistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ResTIConnect.Domain.Entities.Endereco", b =>
                {
                    b.HasOne("ResTIConnect.Domain.Entities.Usuario", "Usuario")
                        .WithOne("Endereco")
                        .HasForeignKey("ResTIConnect.Domain.Entities.Endereco", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ResTIConnect.Domain.Entities.Perfil", b =>
                {
                    b.HasOne("ResTIConnect.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Perfil")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaUsuario", b =>
                {
                    b.HasOne("ResTIConnect.Domain.Entities.Sistema", null)
                        .WithMany()
                        .HasForeignKey("SistemasSistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResTIConnect.Domain.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ResTIConnect.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Endereco");

                    b.Navigation("Perfil");
                });
#pragma warning restore 612, 618
        }
    }
}
