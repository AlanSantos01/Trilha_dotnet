// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResTIConnect.Infrastructure;

#nullable disable

namespace OrdemDeServico.Infra.Migrations
{
    [DbContext(typeof(OrdemDeServicoContext))]
    [Migration("20240129175550_initial_create")]
    partial class initial_create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OrdemDeServico.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CretedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ClienteId");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("OrdemDeServico.Domain.Entities.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CretedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("EnderecoId");

                    b.ToTable("Endereco", (string)null);
                });

            modelBuilder.Entity("OrdemDeServico.Domain.Entities.PrestadorDeServico", b =>
                {
                    b.Property<int>("PrestadorDeServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CretedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PrestadorDeServicoId");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("PrestadorDeServico", (string)null);
                });

            modelBuilder.Entity("OrdemDeServico.Domain.Entities.ServicoOrdemDeServico", b =>
                {
                    b.Property<int>("ServicoOrdemDeServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CretedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ServicoOrdemDeServicoId");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("ServicoOrdemDeServico", (string)null);
                });

            modelBuilder.Entity("OrdemDeServico.Domain.Entities.Cliente", b =>
                {
                    b.HasOne("OrdemDeServico.Domain.Entities.Endereco", "Endereco")
                        .WithOne("Cliente")
                        .HasForeignKey("OrdemDeServico.Domain.Entities.Cliente", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("OrdemDeServico.Domain.Entities.PrestadorDeServico", b =>
                {
                    b.HasOne("OrdemDeServico.Domain.Entities.Endereco", "Endereco")
                        .WithOne("PrestadorDeServico")
                        .HasForeignKey("OrdemDeServico.Domain.Entities.PrestadorDeServico", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("OrdemDeServico.Domain.Entities.ServicoOrdemDeServico", b =>
                {
                    b.HasOne("OrdemDeServico.Domain.Entities.Endereco", "Endereco")
                        .WithOne("ServicoOrdemDeServico")
                        .HasForeignKey("OrdemDeServico.Domain.Entities.ServicoOrdemDeServico", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("OrdemDeServico.Domain.Entities.Endereco", b =>
                {
                    b.Navigation("Cliente")
                        .IsRequired();

                    b.Navigation("PrestadorDeServico")
                        .IsRequired();

                    b.Navigation("ServicoOrdemDeServico")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
